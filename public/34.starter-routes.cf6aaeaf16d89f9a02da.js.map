{"version":3,"sources":["webpack:///./node_modules/@apollo/react-components/lib/react-components.esm.js","webpack:///./src/components/main-view/main-view.mod.css","webpack:///./src/components/view-one/channel.graphql","webpack:///./src/components/view-three/user.graphql","webpack:///./src/components/view-two/state.graphql","webpack:///./src/components/view-one/messages.js","webpack:///./src/components/view-one/view-one.js","webpack:///./src/components/view-two/messages.js","webpack:///./src/components/view-two/view-two.js","webpack:///./src/components/view-three/messages.js","webpack:///./src/components/view-three/view-three.js","webpack:///./src/components/main-view/messages.js","webpack:///./src/components/main-view/main-view.js","webpack:///./src/constants.js","webpack:///./src/routes.js"],"names":["Query","props","children","query","options","result","Mutation","_a","mutation","runMutation","Subscription","subscription","propTypes","client","object","func","isRequired","fetchPolicy","string","notifyOnNetworkStatusChange","bool","onCompleted","onError","pollInterval","number","variables","ssr","partialRefetch","returnPartialData","optimisticResponse","oneOfType","refetchQueries","arrayOf","awaitRefetchQueries","update","onSubscriptionData","onSubscriptionComplete","shouldResubscribe","module","exports","doc","loc","source","definitionRefs","findOperation","name","i","definitions","length","element","value","forEach","def","refs","Set","collectFragmentReferences","node","kind","add","type","selectionSet","selections","selection","variableDefinitions","operationName","newDoc","hasOwnProperty","opRefs","allRefs","newRefs","refName","size","prevRefs","has","childRef","op","push","oneQuery","defineMessages","title","id","description","defaultMessage","Channels","ChannelsQuery","target","GRAPHQL_TARGETS","COMMERCETOOLS_PLATFORM","loading","error","data","message","Headline","elementType","channels","results","States","StatesQuery","states","createQueryVariables","custom","MERCHANT_CENTER_BACKEND","User","UserQuery","me","firstName","lastName","email","labelLinkOne","labelLinkTwo","labelLinkThree","MainView","Inset","scale","Stack","messages","className","styles","Inline","label","to","match","url","iconLeft","path","component","ViewOne","ViewTwo","ViewThree","displayName","PERMISSIONS","PageUnauthorized","ApplicationRoutes","permissions","unauthorizedComponent","shouldMatchSomePermissions","render","routerProps"],"mappings":"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","file":"34.starter-routes.cf6aaeaf16d89f9a02da.js","sourcesContent":["export { ApolloConsumer, ApolloProvider, getApolloContext, resetApolloContext } from '@apollo/react-common';\nimport { __rest } from 'tslib';\nimport { useQuery, useMutation, useSubscription } from '@apollo/react-hooks';\nimport PropTypes from 'prop-types';\n\nfunction Query(props) {\n    var children = props.children, query = props.query, options = __rest(props, [\"children\", \"query\"]);\n    var result = useQuery(query, options);\n    return children && result ? children(result) : null;\n}\n(function (Query) {\n    Query.propTypes = {\n        client: PropTypes.object,\n        children: PropTypes.func.isRequired,\n        fetchPolicy: PropTypes.string,\n        notifyOnNetworkStatusChange: PropTypes.bool,\n        onCompleted: PropTypes.func,\n        onError: PropTypes.func,\n        pollInterval: PropTypes.number,\n        query: PropTypes.object.isRequired,\n        variables: PropTypes.object,\n        ssr: PropTypes.bool,\n        partialRefetch: PropTypes.bool,\n        returnPartialData: PropTypes.bool\n    };\n})(Query || (Query = {}));\n\nfunction Mutation(props) {\n    var _a = useMutation(props.mutation, props), runMutation = _a[0], result = _a[1];\n    return props.children ? props.children(runMutation, result) : null;\n}\n(function (Mutation) {\n    Mutation.propTypes = {\n        mutation: PropTypes.object.isRequired,\n        variables: PropTypes.object,\n        optimisticResponse: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\n        refetchQueries: PropTypes.oneOfType([\n            PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.object])),\n            PropTypes.func\n        ]),\n        awaitRefetchQueries: PropTypes.bool,\n        update: PropTypes.func,\n        children: PropTypes.func.isRequired,\n        onCompleted: PropTypes.func,\n        onError: PropTypes.func,\n        fetchPolicy: PropTypes.string\n    };\n})(Mutation || (Mutation = {}));\n\nfunction Subscription(props) {\n    var result = useSubscription(props.subscription, props);\n    return props.children && result ? props.children(result) : null;\n}\n(function (Subscription) {\n    Subscription.propTypes = {\n        subscription: PropTypes.object.isRequired,\n        variables: PropTypes.object,\n        children: PropTypes.func,\n        onSubscriptionData: PropTypes.func,\n        onSubscriptionComplete: PropTypes.func,\n        shouldResubscribe: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n    };\n})(Subscription || (Subscription = {}));\n\nexport { Mutation, Query, Subscription };\n//# sourceMappingURL=react-components.esm.js.map\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav-header\":\"main-view-mod__nav-header___1yOcj\"};","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"ChannelsQuery\"},\"variableDefinitions\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"channels\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"results\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"locale\"},\"value\":{\"kind\":\"StringValue\",\"value\":\"en\",\"block\":false}}],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":94}};\n    doc.loc.source = {\"body\":\"query ChannelsQuery {\\n  channels {\\n    results{\\n      name(locale: \\\"en\\\")\\n      id\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"ChannelsQuery\"] = oneQuery(doc, \"ChannelsQuery\");\n        \n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"UserQuery\"},\"variableDefinitions\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"me\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"email\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"firstName\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"lastName\"},\"arguments\":[],\"directives\":[]}]}}]}}],\"loc\":{\"start\":0,\"end\":75}};\n    doc.loc.source = {\"body\":\"query UserQuery {\\n  me {\\n    id\\n    email\\n    firstName\\n    lastName\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"UserQuery\"] = oneQuery(doc, \"UserQuery\");\n        \n","\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"StatesQuery\"},\"variableDefinitions\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"states\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"results\"},\"arguments\":[],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"key\"},\"arguments\":[],\"directives\":[]}]}}]}}]}}],\"loc\":{\"start\":0,\"end\":74}};\n    doc.loc.source = {\"body\":\"query StatesQuery {\\n \\tstates {\\n    results{\\n    \\tid\\n      key\\n    }\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"StatesQuery\"] = oneQuery(doc, \"StatesQuery\");\n        \n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  title: {\n    id: 'Channels.title',\n    description: 'The page title of view one',\n    defaultMessage: 'Channels',\n  },\n});\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Text } from '@commercetools-frontend/ui-kit';\nimport messages from './messages';\nimport {Query} from 'react-apollo';\nimport {GRAPHQL_TARGETS} from '@commercetools-frontend/constants';\nimport {ChannelsQuery} from './channel.graphql';\n\nconst createQueryVariables = custom => ({\ntarget: GRAPHQL_TARGETS.COMMERCETOOLS_PLATFORM,\n});\n\n\n\nconst Channels = () => (\n  <Query\n  query={ChannelsQuery}\n  variables={createQueryVariables()}\n  >\n    {({ loading, error, data }) => {\n    if (loading) return \"Loading...\";\n    if (error) return `Error! ${error.message}`;\n\n    return (\n        <Text.Headline elementType=\"h1\">\n          {`Channel: ${JSON.stringify(data.channels.results)}`}\n        </Text.Headline>\n      );\n    }}\n  </Query>\n);\n\nexport default Channels;\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  title: {\n    id: 'ViewTwo.title',\n    description: 'The page title of view two',\n    defaultMessage: 'View two',\n  },\n});\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Text } from '@commercetools-frontend/ui-kit';\nimport messages from './messages';\nimport {Query} from 'react-apollo';\nimport {GRAPHQL_TARGETS} from '@commercetools-frontend/constants';\nimport {StatesQuery} from './state.graphql';\n\nconst createQueryVariables = custom => ({\ntarget: GRAPHQL_TARGETS.COMMERCETOOLS_PLATFORM,\n});\n\n\n\nconst States = () => (\n  <Query\n  query={StatesQuery}\n  variables={createQueryVariables()}\n  >\n    {({ loading, error, data }) => {\n    if (loading) return \"Loading...\";\n    if (error) return `Error! ${error.message}`;\n\n    return (\n        <Text.Headline elementType=\"h1\">\n          {`States: ${JSON.stringify(data.states.results)}`}\n        </Text.Headline>\n      );\n    }}\n  </Query>\n);\n\nexport default States;\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  title: {\n    id: 'ViewThree.title',\n    description: 'The page title of view three',\n    defaultMessage: 'View three',\n  },\n});\n","import React from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { Text } from '@commercetools-frontend/ui-kit';\nimport messages from './messages';\nimport {Query} from 'react-apollo';\nimport {GRAPHQL_TARGETS} from '@commercetools-frontend/constants';\nimport {UserQuery} from './user.graphql';\n\nconst createQueryVariables = custom => ({\ntarget: GRAPHQL_TARGETS.MERCHANT_CENTER_BACKEND,\n...custom,\n});\n\nconst User = () => (\n  <Query\n    query={UserQuery}\n    variables={createQueryVariables()}\n  >\n    {({ loading, error, data }) => {\n      if (loading) return \"Loading...\";\n      if (error) return `Error! ${error.message}`;\n      return (\n        <Text.Headline elementType=\"h1\">\n          {`Current Logged In User: ${data.me.firstName + ' ' + data.me.lastName}`}\n          <br />\n          {`ID: ${data.me.id}`}\n          <br />\n          {`Email: ${data.me.email}`}\n        </Text.Headline>\n      );\n    }}\n  </Query>\n);\nexport default User;\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  title: {\n    id: 'MainView.title',\n    description: 'The page title of main view',\n    defaultMessage: 'Hello, world',\n  },\n  labelLinkOne: {\n    id: 'MainView.labelLinkOne',\n    description: 'The label for the link to page one',\n    defaultMessage: 'Page one',\n  },\n  labelLinkTwo: {\n    id: 'MainView.labelLinkTwo',\n    description: 'The label for the link to page two',\n    defaultMessage: 'Page two',\n  },\n  labelLinkThree: {\n    id: 'MainView.labelLinkThree',\n    description: 'The label for the link to page three',\n    defaultMessage: 'Page three',\n  }\n});\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormattedMessage } from 'react-intl';\nimport { Route, Switch } from 'react-router-dom';\nimport {\n  ListIcon,\n  TableIcon,\n  LinkButton,\n  Spacings,\n  Text,\n} from '@commercetools-frontend/ui-kit';\nimport ViewOne from '../view-one';\nimport ViewTwo from '../view-two';\nimport ViewThree from '../view-three';\nimport messages from './messages';\nimport styles from './main-view.mod.css';\n\nconst MainView = props => (\n  <Spacings.Inset scale=\"m\">\n    <Spacings.Stack scale=\"m\">\n      <Text.Headline elementType=\"h1\">\n        <FormattedMessage {...messages.title} />\n      </Text.Headline>\n      <div className={styles['nav-header']}>\n        <Spacings.Inline scale=\"s\">\n          <FormattedMessage {...messages.labelLinkOne}>\n            {label => (\n              <LinkButton\n                to={`${props.match.url}/one`}\n                iconLeft={<ListIcon />}\n                label={label}\n              />\n            )}\n          </FormattedMessage>\n          <FormattedMessage {...messages.labelLinkTwo}>\n            {label => (\n              <LinkButton\n                to={`${props.match.url}/two`}\n                iconLeft={<TableIcon />}\n                label={label}\n              />\n            )}\n          </FormattedMessage>\n          <FormattedMessage {...messages.labelLinkThree}>\n            {label => (\n              <LinkButton\n                to={`${props.match.url}/three`}\n                iconLeft={<TableIcon />}\n                label={label}\n              />\n            )}\n          </FormattedMessage>\n        </Spacings.Inline>\n      </div>\n      <Switch>\n        <Route path={`${props.match.path}/one`} component={ViewOne} />\n        <Route path={`${props.match.path}/two`} component={ViewTwo} />\n        <Route path={`${props.match.path}/three`} component={ViewThree} />\n      </Switch>\n    </Spacings.Stack>\n  </Spacings.Inset>\n);\nMainView.displayName = 'MainView';\nMainView.propTypes = {\n  match: PropTypes.shape({\n    path: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired,\n    params: PropTypes.shape({\n      projectKey: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default MainView;\n","export const PERMISSIONS = {\n  ManageDeveloperSettings: 'ManageDeveloperSettings',\n  ViewDeveloperSettings: 'ViewDeveloperSettings',\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Switch } from 'react-router-dom';\nimport { MaintenancePageLayout } from '@commercetools-frontend/application-components';\nimport { InjectReducers } from '@commercetools-frontend/application-shell';\nimport { useIsAuthorized } from '@commercetools-frontend/permissions';\n\nimport {\n  RestrictedByPermissions,\n  permission\n} from '@commercetools-frontend/permissions';\nimport MainView from './components/main-view';\nimport { PERMISSIONS } from './constants';\n\nconst PageUnauthorized = () => <div>{'Unauthorized'}</div>;\nPageUnauthorized.displayName = 'PageUnauthorized';\n\nconst ApplicationRoutes = ({ match }) => (\n  <RestrictedByPermissions\n  // define permissions with new permissions import here \n    permissions={[PERMISSIONS.ViewDeveloperSettings]}\n    unauthorizedComponent={PageUnauthorized}\n    shouldMatchSomePermissions={true}\n  >\n    <Switch>\n      <Route\n        path={`${match.path}/some-other-route`}\n        render={() => <div>{'Nothing to see'}</div>}\n      />\n      <Route render={routerProps => <MainView match={routerProps.match} />} />\n    </Switch>\n  </RestrictedByPermissions>\n);\nApplicationRoutes.displayName = 'ApplicationRoutes';\nApplicationRoutes.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      projectKey: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default ApplicationRoutes;\n"],"sourceRoot":""}